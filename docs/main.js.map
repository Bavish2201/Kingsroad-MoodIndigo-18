{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin.service.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/control-panel/control-panel.component.css","webpack:///./src/app/control-panel/control-panel.component.html","webpack:///./src/app/control-panel/control-panel.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/leaderboard/leaderboard.component.css","webpack:///./src/app/leaderboard/leaderboard.component.html","webpack:///./src/app/leaderboard/leaderboard.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/team-create/team-create.component.css","webpack:///./src/app/team-create/team-create.component.html","webpack:///./src/app/team-create/team-create.component.ts","webpack:///./src/app/trade/trade.component.css","webpack:///./src/app/trade/trade.component.html","webpack:///./src/app/trade/trade.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ2C;AACO;AACT;AAKzC;IAEE,sBAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEhE,oCAAa,GAAb;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,4CAA4C,CAAC,CAAC;IAC1E,CAAC;IAED,oCAAa,GAAb;QACE,OAAO,CAAC,CAAC;IACX,CAAC;IAED,qCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,6CAA6C,CAAC,CAAC;IAC3E,CAAC;IAED,qCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,kDAAkD,CAAC,CAAC;IAChF,CAAC;IAlBU,YAAY;QADxB,gEAAU,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;yCAGL,+DAAU,EAAkB,sDAAM;OAFjD,YAAY,CAoBxB;IAAD,mBAAC;CAAA;AApBwB;;;;;;;;;;;;ACPzB,kCAAkC,sBAAsB,eAAe,kBAAkB,gDAAgD,sBAAsB,sBAAsB,iBAAiB,KAAK,qBAAqB,gBAAgB,wBAAwB,oBAAoB,iBAAiB,uBAAuB,yBAAyB,KAAK,uCAAuC,qBAAqB,KAAK,oBAAoB,qBAAqB,KAAK,eAAe,kCAAkC,mBAAmB,0BAA0B,iBAAiB,uBAAuB,kBAAkB,KAAK,K;;;;;;;;;;;ACA9mB,8/BAA8/B,YAAY,yZ;;;;;;;;;;;;;;;;;;;;;;;;;ACAx9B;AACF;AAOhD;IAQE,wBAAmB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAJrC,aAAQ,GAAI,KAAK,CAAC;IAIuB,CAAC;IAElD,iCAAQ,GAAR;QACE,IAAI,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,MAAM,EAAE;YACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;QACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gCAAO,GAAP;QACE,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE;YAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,cAAc,CAAC,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;SACjD;aAAM;YACL,KAAK,CAAC,8BAA8B,CAAC,CAAC;SACvC;IACH,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,cAAc,CAAC,OAAO,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,yCAAgB,GAAhB;QAAA,iBAMC;QALE,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACnD,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAc,GAAd;QAAA,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACnD,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,KAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IA7CU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCASiC,2DAAY;OARlC,cAAc,CA8C1B;IAAD,qBAAC;CAAA;AA9C0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRc;AACc;AAEE;AACS;AACZ;AACe;AACK;AACjB;AAEzD,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAC;IACpC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;IAChD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAC;IAClD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAmB,EAAC;IACrD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;CAC3C,CAAC;AAMF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACvB7B,mB;;;;;;;;;;;ACAA,qD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,WAAW,CAAC;IACtB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACyB;AACa;AACvB;AACA;AAWb;AAGI;AACU;AACS;AACZ;AACe;AACK;AACjB;AACkB;AAClB;AACuB;AAoChF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qEAAc;gBACd,8EAAiB;gBACjB,mEAAa;gBACb,kFAAkB;gBAClB,uFAAmB;gBACnB,sEAAc;gBACd,wFAAoB;gBACpB,sEAAc;gBACd,6FAAqB;aACtB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,oEAAgB;gBAChB,kEAAmB;gBACnB,qEAAgB;gBAChB,4FAAuB;gBACvB,gEAAc;gBACd,mEAAiB;gBACjB,+DAAa;gBACb,iEAAe;gBACf,kEAAgB;gBAChB,oEAAkB;gBAClB,0EAAwB;gBACxB,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AChEtB,8BAA8B,gCAAgC,oBAAoB,KAAK,K;;;;;;;;;;;ACAvF,2G;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,iDAAiD,qBAAqB,KAAK,oBAAoB,oBAAoB,8BAA8B,0BAA0B,KAAK,uBAAuB,wBAAwB,2CAA2C,yBAAyB,KAAK,gCAAgC,uBAAuB,iBAAiB,kBAAkB,KAAK,uBAAuB,oBAAoB,KAAK,sBAAsB,oBAAoB,KAAK,8CAA8C,qBAAqB,sBAAsB,OAAO,oBAAoB,sBAAsB,OAAO,KAAK,K;;;;;;;;;;;ACA5nB,4pBAA4pB,cAAc,+FAA+F,QAAQ,ywB;;;;;;;;;;;;;;;;;;;;;;;;;ACA/tB;AACT;AAOzC;IAIE,4BAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEtC,qCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IAED,mCAAM,GAAN;QACE,cAAc,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IAbU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAK2B,sDAAM;OAJtB,kBAAkB,CAe9B;IAAD,yBAAC;CAAA;AAf8B;;;;;;;;;;;;ACR/B,+BAA+B,mBAAmB,gBAAgB,KAAK,K;;;;;;;;;;;ACAvE,kE;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AAOzC;IAEE,uBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,gCAAQ,GAAR;QACE,IAAI,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,MAAM;YAChD,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE;YAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;aAAM,IAAI,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,MAAM;YACpD,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE;YAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACrC;IACH,CAAC;IAdU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAG4B,sDAAM;OAFvB,aAAa,CAgBzB;IAAD,oBAAC;CAAA;AAhByB;;;;;;;;;;;;ACR1B,yBAAyB,qBAAqB,KAAK,uBAAuB,uBAAuB,sBAAsB,wBAAwB,KAAK,0BAA0B,sBAAsB,wBAAwB,KAAK,sBAAsB,qBAAqB,oBAAoB,kBAAkB,KAAK,yBAAyB,uCAAuC,KAAK,oBAAoB,0BAA0B,KAAK,K;;;;;;;;;;;ACA/a,uTAAuT,2BAA2B,KAAK,6BAA6B,eAAe,qDAAqD,WAAW,8D;;;;;;;;;;;;;;;;;;;;;;;;;ACAjZ;AACF;AAOhD;IAIE,8BAAmB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAFrC,UAAK,GAAG,EAAE,CAAC;IAE8B,CAAC;IAElD,uCAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,iDAAkB,GAAlB;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACnD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAfU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAKiC,2DAAY;OAJlC,oBAAoB,CAgBhC;IAAD,2BAAC;CAAA;AAhBgC;;;;;;;;;;;;ACRjC,+BAA+B,mBAAmB,oBAAoB,sBAAsB,aAAa,cAAc,iBAAiB,2CAA2C,KAAK,0BAA0B,gBAAgB,iBAAiB,mBAAmB,oBAAoB,iBAAiB,uBAAuB,KAAK,wBAAwB,yBAAyB,KAAK,8BAA8B,kBAAkB,KAAK,gBAAgB,mBAAmB,KAAK,gBAAgB,yBAAyB,yBAAyB,KAAK,wBAAwB,sBAAsB,iBAAiB,KAAK,S;;;;;;;;;;;ACArmB,swBAAswB,WAAW,kT;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/tB;AACJ;AACL;AAOzC;IAOE,wBAAmB,WAAwB,EAAS,MAAc;QAA/C,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAH1D,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,EAAE,CAAC;IAE+C,CAAC;IAEvE,iCAAQ,GAAR;IACA,CAAC;IAED,gCAAO,GAAP;QAAA,iBAsBC;QArBC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;aACrD,SAAS,CAAC,iBAAO;YAEhB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,IAAI,OAAO,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC1B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;gBACpD,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACrD,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;gBAEjD,IAAI,OAAO,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;iBACvC;qBAAM;oBACL,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;iBACrC;aACF;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,SAAS,GAAG,iCAAiC,CAAC;aACpD;QAEH,CAAC,CAAC,CAAC;IACP,CAAC;IAlCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAQgC,yDAAW,EAAiB,sDAAM;OAPvD,cAAc,CAoC1B;IAAD,qBAAC;CAAA;AApC0B;;;;;;;;;;;;ACT3B,+BAA+B,kBAAkB,mBAAmB,2CAA2C,sBAAsB,KAAK,0BAA0B,eAAe,mBAAmB,oBAAoB,iBAAiB,uBAAuB,KAAK,wBAAwB,yBAAyB,KAAK,8BAA8B,kBAAkB,KAAK,gBAAgB,mBAAmB,KAAK,gBAAgB,yBAAyB,yBAAyB,KAAK,wBAAwB,sBAAsB,iBAAiB,KAAK,S;;;;;;;;;;;ACAriB,+5BAA+5B,WAAW,sS;;;;;;;;;;;;;;;;;;;;;;;;;;ACAx3B;AACT;AACK;AAO9C;IAQE,2BAAmB,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAJzB,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,EAAE,CAAC;IAGc,CAAC;IAEtC,oCAAQ,GAAR;QACE,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IAED,sCAAU,GAAV;QAAA,iBAaC;QAZC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC;aACtE,SAAS,CAAC,iBAAO;YAChB,IAAI,OAAO,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC1B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;gBACvD,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;aACvC;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,SAAS,GAAG,yBAAyB,CAAC;aAC5C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IA5BU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCASgC,yDAAW;YAChB,sDAAM;OATtB,iBAAiB,CA8B7B;IAAD,wBAAC;CAAA;AA9B6B;;;;;;;;;;;;ACT9B,8BAA8B,mBAAmB,uBAAuB,uBAAuB,iBAAiB,KAAK,YAAY,gDAAgD,sBAAsB,uBAAuB,0BAA0B,KAAK,YAAY,gDAAgD,sBAAsB,uBAAuB,KAAK,YAAY,sBAAsB,uBAAuB,yBAAyB,gBAAgB,mBAAmB,iCAAiC,0BAA0B,KAAK,oBAAoB,sBAAsB,uBAAuB,qBAAqB,KAAK,wBAAwB,mBAAmB,gCAAgC,0BAA0B,oBAAoB,sBAAsB,qBAAqB,0CAA0C,KAAK,wBAAwB,sBAAsB,eAAe,kBAAkB,gDAAgD,sBAAsB,sBAAsB,iBAAiB,KAAK,K;;;;;;;;;;;ACA/gC,gKAAgK,UAAU,sqBAAsqB,UAAU,6oBAA6oB,WAAW,8K;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh8C;AACJ;AACL;AAOzC;IAaE,6BAAmB,WAAwB,EAAS,MAAc;QAA/C,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAVlE,mBAAc,GAAG,KAAK,CAAC;QAOf,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,EAAE,CAAC;IAE+C,CAAC;IAEvE,sCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IAED,0CAAY,GAAZ;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EACtE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,iBAAO;YAC/C,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,IAAI,OAAO,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC1B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sCAAQ,GAAR;QACE,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACzC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACpC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IArCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAcgC,yDAAW,EAAiB,sDAAM;OAbvD,mBAAmB,CAuC/B;IAAD,0BAAC;CAAA;AAvC+B;;;;;;;;;;;;ACThC,8BAA8B,mBAAmB,KAAK,yBAAyB,uCAAuC,KAAK,K;;;;;;;;;;;ACA3H,g6B;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAOE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IAVU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAY1B;IAAD,qBAAC;CAAA;AAZ0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPgB;AACO;AACT;AAKzC;IAGE,qBAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEhE,kCAAY,GAAZ,UAAa,QAAgB,EAAE,KAAa,EAAE,QAAgB;QAC5D,IAAM,QAAQ,GAAG;YACf,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,QAAQ;SACnB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,oCAAoC,EAAE,QAAQ,CAAC,CAAC;IAC7E,CAAC;IAED,+BAAS,GAAT,UAAU,SAAiB,EAAE,SAAiB;QAC5C,IAAM,QAAQ,GAAG;YACf,QAAQ,EAAE,SAAS;YACnB,QAAQ,EAAE,SAAS;SACpB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,iCAAiC,EAAE,QAAQ,CAAC,CAAC;IAC1E,CAAC;IAED,gCAAU,GAAV,UAAW,QAAgB,EAAE,SAAiB,EAAE,SAAiB,EAC/D,SAAiB,EAAE,SAAiB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,yCAAyC,EAAE;YACpE,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,SAAS;YACpB,SAAS,EAAE,SAAS;YACpB,SAAS,EAAE,SAAS;YACpB,SAAS,EAAE,SAAS;SACrB,CAAC,CAAC;IACL,CAAC;IA/BQ,WAAW;QADvB,gEAAU,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;yCAIL,+DAAU,EAAkB,sDAAM;OAHjD,WAAW,CAiCvB;IAAD,kBAAC;CAAA;AAjCuB;;;;;;;;;;;;;ACPxB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AdminService {\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getUsersCount() {\r\n    return this.http.get<any>('http://localhost:3000/api/admin/count/user');\r\n  }\r\n\r\n  getTeamsCount(): Number {\r\n    return 0;\r\n  }\r\n\r\n  getLeaderboard() {\r\n    return this.http.get<any>('http://localhost:3000/api/admin/leaderboard');\r\n  }\r\n\r\n  deleteAllUsers() {\r\n    return this.http.get<any>('http://localhost:3000/api/admin/users/delete-all');\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \".logout-button {\\r\\n  position: fixed;\\r\\n  top: 5px;\\r\\n  right: 20px;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 18px;\\r\\n  cursor: pointer;\\r\\n  z-index: 5;\\r\\n}\\r\\n\\r\\n.login-card {\\r\\n  top: 30px;\\r\\n  margin: 10px auto;\\r\\n  padding: 20px;\\r\\n  width: 80%;\\r\\n  max-width: 400px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.example-fill-remaining-space {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  border: 0.5px solid #bbbbbb;\\r\\n  margin: 10px;\\r\\n  padding: 0 0 10px 0;\\r\\n  width: 80%;\\r\\n  max-width: 300px;\\r\\n  float: left;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"login-card\\\" *ngIf=\\\"!loggedIn\\\">\\n\\n  <mat-card>\\n    <mat-card-title>Admin Login</mat-card-title>\\n    <br>\\n    <mat-form-field>\\n      <mat-label>Username</mat-label>\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"username\\\" />\\n    </mat-form-field>\\n\\n    <br>\\n\\n    <mat-form-field>\\n      <mat-label>Password</mat-label>\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"password\\\" />\\n    </mat-form-field>\\n\\n    <br>\\n\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onLogin()\\\" >Login</button>\\n  </mat-card>\\n\\n</div>\\n\\n<div *ngIf=\\\"loggedIn\\\" class=\\\"container\\\">\\n\\n    <mat-toolbar color=\\\"primary\\\">\\n      <span>Kingsroad Admin</span>\\n\\n      <!-- This fills the remaining space of the current row -->\\n      <span class=\\\"example-fill-remaining-space\\\"></span>\\n\\n      <span class=\\\"small-screen\\\">\\n        <button mat-button (click)=\\\"onLogout()\\\">Logout</button>\\n      </span>\\n    </mat-toolbar>\\n\\n  <div>\\n    Total number of registerd users: {{usersCount}}\\n    <button mat-button (click)=\\\"deleteAllUsers()\\\">Delete All Users</button>\\n  </div>\\n\\n  <mat-card class=\\\"card .mat-elevation-z0\\\">\\n    <app-leaderboard></app-leaderboard>\\n  </mat-card>\\n\\n  <mat-card class=\\\"card .mat-elevation-z0\\\">\\n    <app-trade></app-trade>\\n  </mat-card>\\n\\n  <mat-card class=\\\"card .mat-elevation-z0\\\">\\n    <app-control-panel></app-control-panel>\\n  </mat-card>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../admin.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  private username: string;\n  private password: string;\n  private loggedIn  = false;\n\n  private usersCount: Number;\n\n  constructor(public adminService: AdminService) { }\n\n  ngOnInit() {\n    if (sessionStorage.getItem('adminLoggedIn') === 'true') {\n      this.loggedIn = true;\n    }\n    this.updateUsersCount();\n  }\n\n  onLogin() {\n    if (this.username === 'admin' && this.password === 'admin') {\n      this.loggedIn = true;\n      sessionStorage.setItem('adminLoggedIn', 'true');\n    } else {\n      alert('Invalid Username or password');\n    }\n  }\n\n  onLogout() {\n    this.loggedIn = false;\n    sessionStorage.setItem('adminLoggedIn', 'false');\n  }\n\n  updateUsersCount() {\n     this.adminService.getUsersCount().subscribe(response => {\n      if (response.status === 200) {\n        this.usersCount = response.count;\n      }\n    });\n  }\n\n  deleteAllUsers() {\n    this.adminService.deleteAllUsers().subscribe(response => {\n      if (response.status === 201) {\n        this.updateUsersCount();\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { TeamCreateComponent } from './team-create/team-create.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'dashboard', component: DashboardComponent},\r\n  {path: 'create-team', component: TeamCreateComponent},\r\n  {path: 'admin', component: AdminComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'kingsroad';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { MatInputModule,\n  MatGridListModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatProgressSpinnerModule,\n  MatDividerModule,\n  MatMenuModule,\n  MatListModule } from '@angular/material';\n\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { TeamCreateComponent } from './team-create/team-create.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\nimport { TradeComponent } from './trade/trade.component';\nimport { ControlPanelComponent } from './control-panel/control-panel.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    TeamCreateComponent,\n    AdminComponent,\n    LeaderboardComponent,\n    TradeComponent,\n    ControlPanelComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatGridListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatDividerModule,\n    MatMenuModule,\n    MatListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".container {\\r\\n  background-color: #3f51b5;\\r\\n  height: 300px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <button mat-raised-button >Advance Scene</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-control-panel',\n  templateUrl: './control-panel.component.html',\n  styleUrls: ['./control-panel.component.css']\n})\nexport class ControlPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-fill-remaining-space {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.invest-board {\\r\\n  margin: 15px auto;\\r\\n  background-color: rgb(233, 233, 233);\\r\\n  border-radius: 0px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"number\\\"] {\\r\\n  max-width: 200px;\\r\\n  width: 80%;\\r\\n  height:20px;\\r\\n}\\r\\n\\r\\n.small-screen {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.wide-screen {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 600px) {\\r\\n  .small-screen {\\r\\n    display: flex;\\r\\n  }\\r\\n  .wide-screen {\\r\\n    display: none;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>Kingsroad</span>\\n\\n  <!-- This fills the remaining space of the current row -->\\n  <span class=\\\"example-fill-remaining-space\\\"></span>\\n\\n  <span class=\\\"small-screen\\\">\\n    <button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</button>\\n    <mat-menu #menu=\\\"matMenu\\\">\\n      <button mat-menu-item (click)=\\\"logout()\\\">Logout</button>\\n    </mat-menu>\\n  </span>\\n  <span class=\\\"wide-screen\\\">\\n    <button mat-button (click)=\\\"logout()\\\">Logout</button>\\n  </span>\\n</mat-toolbar>\\n\\n<div class=\\\"container\\\">\\n  <mat-card class=\\\"invest-board .mat-elevation-z0\\\">\\n    <mat-card-title>\\n      Round: {{round_number}}\\n    </mat-card-title>\\n    <mat-card-content>\\n      <p class=\\\"points\\\">Available Points: {{points}}</p>\\n\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <mat-label>Food</mat-label>\\n        <input matInput type=\\\"number\\\" min=\\\"0\\\" />\\n      </mat-form-field>\\n\\n      <br>\\n\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <mat-label>Milirary</mat-label>\\n        <input matInput type=\\\"number\\\" min=\\\"0\\\" />\\n      </mat-form-field>\\n\\n      <br>\\n\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <mat-label>Research</mat-label>\\n        <input matInput type=\\\"number\\\" min=\\\"0\\\" />\\n      </mat-form-field>\\n\\n      <br>\\n\\n      <mat-card-actions>\\n        <button mat-raised-button color=\\\"primary\\\">Invest</button>\\n        <button mat-raised-button >Clear</button>\\n      </mat-card-actions>\\n\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  username: string;\n\n  constructor(public router: Router) { }\n\n  ngOnInit() {\n    this.username = sessionStorage.getItem('username');\n  }\n\n  logout() {\n    sessionStorage.clear();\n    this.router.navigate(['']);\n  }\n\n}\n","module.exports = \"mat-spinner {\\r\\n  margin: auto;\\r\\n  top: 45vw;\\r\\n}\\r\\n\"","module.exports = \"<mat-spinner [diameter]=\\\"40\\\"></mat-spinner>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    if (sessionStorage.getItem('currentUser') === 'null' ||\n        sessionStorage.getItem('currentUser') === null) {\n      this.router.navigate(['login']);\n    } else if (sessionStorage.getItem('teamid') === 'null' ||\n      sessionStorage.getItem('currentUser') === null) {\n      this.router.navigate(['create-team']);\n    } else {\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n}\n","module.exports = \".fill {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n\\r\\n.teamname {\\r\\n  font-weight: 200;\\r\\n  font-size: 16px;\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.teamdetails {\\r\\n  font-size: 12px;\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n\\r\\nmat-list {\\r\\n  overflow: auto;\\r\\n  height: 400px;\\r\\n  margin: 2px;\\r\\n}\\r\\n\\r\\n\\r\\nmat-toolbar {\\r\\n  border-radius: 10px 10px 0px 0px;\\r\\n}\\r\\n\\r\\n\\r\\nbutton {\\r\\n  border-radius: 20px;\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar  class=\\\"header\\\">\\n  <span>Leaderboard</span>\\n  <span class=\\\"fill\\\"></span>\\n  <span><button mat-stroked-button (click)=\\\"refreshLeaderboard()\\\">Refresh</button></span>\\n</mat-toolbar>\\n\\n\\n<div class=\\\"container\\\">\\n  <mat-list>\\n    <mat-list-item *ngFor=\\\"let team of teams; let i = index\\\">\\n      {{i+1}}) <div class=\\\"teamname\\\"> {{team.teamname}} </div>\\n      <div class=\\\"teamdetails\\\">\\n       {{team.gold}}\\n      </div>\\n    </mat-list-item>\\n  </mat-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../admin.service';\n\n@Component({\n  selector: 'app-leaderboard',\n  templateUrl: './leaderboard.component.html',\n  styleUrls: ['./leaderboard.component.css']\n})\nexport class LeaderboardComponent implements OnInit {\n\n  private teams = [];\n\n  constructor(public adminService: AdminService) { }\n\n  ngOnInit() {\n    this.refreshLeaderboard();\n  }\n\n  refreshLeaderboard() {\n    this.adminService.getLeaderboard().subscribe(response => {\n      console.log(response);\n      this.teams = response.leaderboard;\n    });\n  }\n}\n","module.exports = \".background {\\r\\n  width: 100vw;\\r\\n  height: 100vh;\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  z-index: 0;\\r\\n  background-color: rgb(248, 248, 248);\\r\\n}\\r\\n\\r\\n.login-container {\\r\\n  top: 10vw;\\r\\n  z-index: 1;\\r\\n  margin: auto;\\r\\n  padding: 35px;\\r\\n  width: 70%;\\r\\n  max-width: 400px;\\r\\n}\\r\\n\\r\\nmat-card-title {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nform, mat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\n.title {\\r\\n  text-align: center;\\r\\n  font-family: serif;\\r\\n}\\r\\n\\r\\n.error-message {\\r\\n  font-size: 16px;\\r\\n  color: red;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"background\\\">\\n</div>\\n<mat-card class=\\\"login-container\\\">\\n  <mat-card-title>Login</mat-card-title>\\n  <br>\\n  <mat-card-content>\\n\\n  <form #form=\\\"ngForm\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Username</mat-label>\\n      <input\\n        type=\\\"text\\\"\\n        matInput\\n        name=\\\"username\\\"\\n        autocomplete=\\\"off\\\"\\n        [(ngModel)]=\\\"username\\\">\\n    </mat-form-field>\\n\\n    <br><br>\\n\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Password</mat-label>\\n      <input\\n        matInput\\n        type=\\\"password\\\"\\n        name=\\\"password\\\"\\n        [(ngModel)]=\\\"password\\\">\\n    </mat-form-field>\\n\\n    <br><br>\\n\\n    <div class=\\\"error-message\\\" *ngIf=\\\"showError\\\">\\n      {{errorText}}\\n    </div>\\n\\n    <button\\n      mat-raised-button\\n      color=\\\"primary\\\"\\n      type=\\\"button\\\"\\n      (click)=\\\"onLogin()\\\">Login</button>\\n    <button\\n      mat-stroked-button\\n      routerLink=\\\"/register\\\"\\n      type=\\\"button\\\">Register</button>\\n  </form>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password: string;\n  private showError = false;\n  private errorText = '';\n\n  constructor(public userService: UserService, public router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogin() {\n    this.userService.loginUser(this.username, this.password)\n      .subscribe(resData => {\n\n        console.log(resData);\n        if (resData.status === 200) {\n          this.showError = false;\n          sessionStorage.setItem('currentUser', resData.user);\n          sessionStorage.setItem('username', resData.username);\n          sessionStorage.setItem('teamid', resData.teamid);\n\n          if (resData.teamid == null) {\n            this.router.navigate(['create-team']);\n          } else {\n            this.router.navigate(['dashboard']);\n          }\n        } else {\n          this.showError = true;\n          this.errorText = 'Username or Password is invalid';\n        }\n\n      });\n  }\n\n}\n","module.exports = \".background {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background-color: rgb(248, 248, 248);\\r\\n  position: fixed;\\r\\n}\\r\\n\\r\\n.login-container {\\r\\n  top: 5vw;\\r\\n  margin: auto;\\r\\n  padding: 25px;\\r\\n  width: 80%;\\r\\n  max-width: 500px;\\r\\n}\\r\\n\\r\\nmat-card-title {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nform, mat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\n.title {\\r\\n  text-align: center;\\r\\n  font-family: serif;\\r\\n}\\r\\n\\r\\n.error-message {\\r\\n  font-size: 16px;\\r\\n  color: red;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"background\\\"></div>\\n<mat-card class=\\\"login-container\\\">\\n  <mat-card-title>Register</mat-card-title>\\n  <br>\\n  <mat-card-content>\\n\\n  <form #form=\\\"ngForm\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>Username</mat-label>\\n    <input\\n      matInput\\n      type=\\\"text\\\"\\n      name=\\\"username\\\"\\n      [(ngModel)]=\\\"username\\\">\\n    </mat-form-field>\\n\\n    <br>\\n    <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>Email</mat-label>\\n    <input\\n      matInput\\n      type=\\\"email\\\"\\n      name=\\\"email\\\"\\n      [(ngModel)]=\\\"email\\\">\\n    </mat-form-field>\\n\\n    <br>\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Password</mat-label>\\n      <input\\n        matInput\\n        type=\\\"password\\\"\\n        name=\\\"password\\\"\\n        [(ngModel)]=\\\"password\\\">\\n    </mat-form-field>\\n\\n    <div class=\\\"error-message\\\" *ngIf=\\\"showError\\\">\\n      {{errorText}}\\n    </div>\\n\\n    <button\\n      mat-raised-button\\n      color=\\\"primary\\\"\\n      (click)=\\\"onRegister()\\\"\\n      type=\\\"submit\\\">Register</button>\\n    <button\\n      mat-button\\n      routerLink = \\\"\\\"\\n      type=\\\"button\\\">Login</button>\\n  </form>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  username: string;\n  password: string;\n  email: string;\n  private showError = false;\n  private errorText = '';\n\n  constructor(public userService: UserService,\n              public router: Router) { }\n\n  ngOnInit() {\n    sessionStorage.removeItem('currentUser');\n  }\n\n  onRegister() {\n    this.userService.registerUser(this.username, this.email, this.password)\n    .subscribe(resData => {\n      if (resData.status === 200) {\n        this.showError = false;\n        sessionStorage.setItem('currentUser', resData.user_id);\n        sessionStorage.setItem('username', resData.username);\n        this.router.navigate(['create-team']);\n      } else {\n        this.showError = true;\n        this.errorText = 'Username already exists';\n      }\n    });\n  }\n\n}\n","module.exports = \".container {\\r\\n  margin: auto;\\r\\n  margin-top: 20px;\\r\\n  max-width: 500px;\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 20px;\\r\\n  font-weight: 200;\\r\\n  margin-bottom: 40px;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 16px;\\r\\n  font-weight: 200;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n  font-size: 16px;\\r\\n  font-weight: 300;\\r\\n  color: #272727\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin: 10px;\\r\\n  padding: 5px 25px 5px 25px;\\r\\n  border-radius: 25px;\\r\\n}\\r\\n\\r\\n.info-text {\\r\\n  font-size: 16px;\\r\\n  font-weight: 200;\\r\\n  color: #3d3d3d;\\r\\n}\\r\\n\\r\\n.error-message {\\r\\n  color: white;\\r\\n  background-color: #d41111;\\r\\n  border-radius: 15px;\\r\\n  padding: 12px;\\r\\n  font-size: 18px;\\r\\n  max-width: 80%;\\r\\n  box-shadow: 1px 1px 5px 0px #868484;\\r\\n}\\r\\n\\r\\n.logout-button {\\r\\n  position: fixed;\\r\\n  top: 5px;\\r\\n  right: 20px;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 18px;\\r\\n  cursor: pointer;\\r\\n  z-index: 5;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"logout-button\\\" (click)=\\\"onLogout()\\\">\\n  Logout\\n</div>\\n\\n<mat-card class=\\\"container .mat-elevation-z0\\\">\\n\\n  <h1>Welcome {{username}}</h1>\\n\\n <div *ngIf=\\\"!createTeamMode\\\">\\n    <h2>You are not part of any team yet</h2>\\n\\n    <button mat-stroked-button\\n      type=\\\"button\\\" (click)=\\\"createTeamMode = true\\\">Create New Team</button>\\n\\n  </div>\\n\\n  <div *ngIf=\\\"createTeamMode\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n        <mat-label>Team Name</mat-label>\\n        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"teamname\\\">\\n      </mat-form-field>\\n\\n    <h2>Enter Usernames of your team members </h2>\\n    <p class=\\\"info-text\\\">\\n      Note: The team members should have already registerd.\\n      If not, please ask them to register first and then proceed.\\n    </p>\\n\\n    <p>Team Member 1: {{username}}</p>\\n\\n    <br>\\n\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Team Member 2</mat-label>\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"username2\\\">\\n    </mat-form-field>\\n\\n    <br>\\n\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Team Member 3</mat-label>\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"username3\\\">\\n    </mat-form-field>\\n\\n    <br>\\n\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Team Member 4</mat-label>\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"username4\\\">\\n    </mat-form-field>\\n\\n    <br>\\n\\n    <div class=\\\"error-message\\\" *ngIf=\\\"showError\\\">\\n      {{errorText}}\\n    </div>\\n\\n    <button mat-stroked-button\\n      color=\\\"primary\\\"\\n      type=\\\"button\\\"\\n      (click)=\\\"onCreateTeam()\\\">Create</button>\\n\\n  </div>\\n\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-team-create',\n  templateUrl: './team-create.component.html',\n  styleUrls: ['./team-create.component.css']\n})\nexport class TeamCreateComponent implements OnInit {\n\n  username: string;\n  createTeamMode = false;\n\n  teamname: string;\n  username2: string;\n  username3: string;\n  username4: string;\n\n  private showError = false;\n  private errorText = '';\n\n  constructor(public userService: UserService, public router: Router) { }\n\n  ngOnInit() {\n    this.username = sessionStorage.getItem('username');\n  }\n\n  onCreateTeam() {\n    this.userService.createTeam(this.teamname, this.username, this.username2,\n      this.username3, this.username4).subscribe(resData => {\n        console.log(resData);\n        if (resData.status === 200) {\n          this.showError = false;\n        } else {\n          this.showError = true;\n          this.errorText = resData.message;\n        }\n      });\n  }\n\n  onLogout() {\n    sessionStorage.removeItem('currentUser');\n    sessionStorage.removeItem('teamid');\n    sessionStorage.removeItem('username');\n    this.router.navigate(['']);\n  }\n\n}\n","module.exports = \".container {\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\n\\r\\nmat-toolbar {\\r\\n  border-radius: 10px 10px 0px 0px;\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar class=\\\"header\\\">\\n    <span>Trade</span>\\n    <span class=\\\"fill\\\"></span>\\n</mat-toolbar>\\n\\n<div class=\\\"container\\\">\\n  <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>From Teamname</mat-label>\\n    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"from\\\"/>\\n  </mat-form-field>\\n\\n  <br>\\n\\n  <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>To Teamname</mat-label>\\n    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"to\\\"/>\\n  </mat-form-field>\\n\\n  <br>\\n\\n  <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>Food</mat-label>\\n    <input matInput type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"food\\\"/>\\n  </mat-form-field>\\n\\n  <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>Military</mat-label>\\n    <input matInput type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"military\\\"/>\\n  </mat-form-field>\\n\\n  <br>\\n\\n  <button mat-raised-button color=\\\"primary\\\">Trade</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-trade',\n  templateUrl: './trade.component.html',\n  styleUrls: ['./trade.component.css']\n})\nexport class TradeComponent implements OnInit {\n\n  from: string;\n  to: string;\n  food: number;\n  military: number;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserService {\r\n  currentUser: User;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  registerUser(username: string, email: string, password: string) {\r\n    const userData = {\r\n      username: username,\r\n      email: email,\r\n      password: password\r\n    };\r\n    return this.http.post<any>('http://localhost:3000/api/register', userData);\r\n  }\r\n\r\n  loginUser(_username: string, _password: string) {\r\n    const userData = {\r\n      username: _username,\r\n      password: _password\r\n    };\r\n    return this.http.post<any>('http://localhost:3000/api/login', userData);\r\n  }\r\n\r\n  createTeam(teamname: string, username1: string, username2: string,\r\n    username3: string, username4: string) {\r\n      return this.http.post<any>('http://localhost:3000/api/register/team', {\r\n        teamname: teamname,\r\n        username1: username1,\r\n        username2: username2,\r\n        username3: username3,\r\n        username4: username4\r\n      });\r\n    }\r\n\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}